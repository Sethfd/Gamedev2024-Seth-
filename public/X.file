<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Snake Game</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <h1>Snake Game</h1>
    <div class="score-board">
        <span id="score">Score: 0</span>
        <span id="high-score">High Score: 0</span>
    </div>
    <div class="game-board" id="game-board"></div>
    <script src="script.js"></script>
</body>
</html>
body {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100vh;
    margin: 0;
    background-color: #f0f0f0;
    font-family: Arial, sans-serif;
}

h1 {
    margin-bottom: 20px;
}

.score-board {
    display: flex;
    justify-content: space-between;
    width: 300px;
    margin-bottom: 10px;
}

.game-board {
    display: grid;
    grid-template-columns: repeat(20, 20px);
    grid-template-rows: repeat(20, 20px);
    gap: 1px;
    background-color: #333;
}

.game-board div {
    width: 20px;
    height: 20px;
    background-color: #fff;
}
const gameBoard = document.getElementById('game-board');
const scoreDisplay = document.getElementById('score');
const highScoreDisplay = document.getElementById('high-score');

let snake = [{ x: 10, y: 10 }];
let direction = { x: 0, y: 0 };
let food = { x: 15, y: 15 };
let score = 0;
let highScore = localStorage.getItem('highScore') || 0;

highScoreDisplay.textContent = `High Score: ${highScore}`;

function update() {
    const head = { x: snake[0].x + direction.x, y: snake[0].y + direction.y };

    if (head.x === food.x && head.y === food.y) {
        score++;
        scoreDisplay.textContent = `Score: ${score}`;
        food = { x: Math.floor(Math.random() * 20), y: Math.floor(Math.random() * 20) };
    } else {
        snake.pop();
    }

    if (head.x < 0 || head.x >= 20 || head.y < 0 || head.y >= 20 || snake.some(segment => segment.x === head.x && segment.y === head.y)) {
        if (score > highScore) {
            highScore = score;
            localStorage.setItem('highScore', highScore);
            highScoreDisplay.textContent = `High Score: ${highScore}`;
        }
        score = 0;
        scoreDisplay.textContent = `Score: ${score}`;
        snake = [{ x: 10, y: 10 }];
        direction = { x: 0, y: 0 };
    }

    snake.unshift(head);

    gameBoard.innerHTML = '';
    snake.forEach(segment => {
        const segmentElement = document.createElement('div');
        segmentElement.style.gridRowStart = segment.y + 1;
        segmentElement.style.gridColumnStart = segment.x + 1;
        gameBoard.appendChild(segmentElement);
    });

    const foodElement = document.createElement('div');
    foodElement.style.gridRowStart = food.y + 1;
    foodElement.style.gridColumnStart = food.x + 1;
    foodElement.style.backgroundColor = 'red';
    gameBoard.appendChild(foodElement);
}

function changeDirection(event) {
    switch (event.key) {
        case 'ArrowUp':
            if (direction.y === 0) direction = { x: 0, y: -1 };
            break;
        case 'ArrowDown':
            if (direction.y === 0) direction = { x: 0, y: 1 };
            break;
        case 'ArrowLeft':
            if (direction.x === 0) direction = { x: -1, y: 0 };
            break;
        case 'ArrowRight':
            if (direction.x === 0) direction = { x: 1, y: 0 };
            break;
    }
}

document.addEventListener('keydown', changeDirection);
setInterval(update, 100);
